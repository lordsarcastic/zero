name: General workflow

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: password
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Rust cache action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ vars.SQLX_VERSION }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
            --version=${{ vars.SQLX_VERSION }}
            --features ${{ vars.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Run migrations
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run tests
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: password
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: Rust cache action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ vars.SQLX_VERSION }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
            --version=${{ vars.SQLX_VERSION }}
            --features ${{ vars.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Run migrations
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Linting
        run: cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: password
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-tarpaulin
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin
      - name: Rust cache action
        uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ vars.SQLX_VERSION }}

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
            --version=${{ vars.SQLX_VERSION }}
            --features ${{ vars.SQLX_FEATURES }}
            --no-default-features
            --locked

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install postgresql-client -y

      - name: Run migrations
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      
      - name: Run tests with coverage
        run: cargo install cargo-tarpaulin && cargo tarpaulin --verbose --workspace
